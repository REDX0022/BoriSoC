; LUI tests

LUI   x1 00000      ; x1 = 0x00000000
LUI   x2 00001      ; x2 = 0x00001000
LUI   x3 000FF      ; x3 = 0x000FF000
LUI   x4 80000      ; x4 = 0x80000000 (sign bit set)
LUI   x5 FFFFF      ; x5 = 0xFFFFF000 (all upper bits set, lower 12 zero)
LUI   x6 7FFFF      ; x6 = 0x7FFFF000 (largest positive 20-bit)
LUI   x7 12345      ; x7 = 0x12345000 (random pattern)
LUI   x8 ABCDE      ; x8 = 0xABCDE000 (random pattern)
LUI   x9 00010      ; x9 = 0x00010000 (small nonzero)
LUI   x10 0000F     ; x10 = 0x0000F000 (small nonzero)

; Overwrite test
LUI   x1 0AAAA      ; x1 = 0x0AAAA000 (overwrite x1)
LUI   x1 05555      ; x1 = 0x05555000 (overwrite x1 again)

; LUI followed by ADDI (check lower bits remain zero)
LUI   x11 00001     ; x11 = 0x00001000
ADDI  x11 x11 001   ; x11 = 0x00001001

LUI   x12 FFFFF     ; x12 = 0xFFFFF000
ADDI  x12 x12 123   ; x12 = 0xFFFFF123

; LUI with zero register (should have no effect)
LUI   x0 12345      ; x0 should remain 0

; LUI with all ones (check sign extension if used later)
LUI   x13 FFFFF     ; x13 = 0xFFFFF000
SRAI  x14 x13 01F   ; x14 = 0xFFFFFFFF (arithmetic shift right by 31)

; LUI with alternating bits
LUI   x15 55555     ; x15 = 0x55555000
LUI   x16 AAAAA     ; x16 = 0xAAAAA000

; LUI with minimum and maximum
LUI   x17 00000     ; x17 = 0x00000000
LUI   x18 FFFFF     ; x18 = 0xFFFFF000