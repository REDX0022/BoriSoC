; --- Register Setup ---
ADDI x1 x0 001      ; x1 = 1
ADDI x2 x0 002      ; x2 = 2
ADDI x3 x0 FFF      ; x3 = -1 (0xFFFF in 16-bit)
ADDI x4 x0 800      ; x4 = -2048 (0xF800 in 16-bit)
ADDI x5 x0 7FF      ; x5 = 2047
ADDI x6 x0 100      ; x6 = 256
ADDI x7 x0 0FF      ; x7 = 255

; --- ADDI Test ---
ADDI x8 x1 00A      ; x8 = 1 + 10 = 11 (expected: 0x00B)

; --- SLTI Test (signed compare) ---
SLTI x9 x1 002      ; x9 = (1 < 2) ? 1 : 0 = 1
SLTI x10 x2 001     ; x10 = (2 < 1) ? 1 : 0 = 0

; --- SLTIU Test (unsigned compare) ---
SLTIU x11 x1 002    ; x11 = 1 (unsigned: 1 < 2)
SLTIU x12 x2 001    ; x12 = 0 (unsigned: 2 < 1 false)

; --- XORI Test ---
; For x3 = FFF (which represents -1, i.e. 0xFFFF), XOR with 0F0 gives 0xFFFF XOR 0x00F0 = FF0F
XORI x13 x3 0F0     ; x13 = 0xFF0F

; --- ORI Test ---
ORI x14 x1 0F0      ; x14 = 1 OR 0x0F0 = 0x0F1
ORI x15 x3 00A      ; x15 = 0xFFFF OR 0x000A = 0xFFFF

; --- ANDI Test ---
ANDI x16 x4 0FF     ; x16 = 0xF800 AND 0x0FF = 0x0000
ANDI x17 x5 0FF     ; x17 = 0x07FF AND 0x0FF = 0x00FF

; --- SLLI Test ---
; For shift instructions, the immediate is the shift amount (lower 5 bits)
SLLI x18 x1 001     ; x18 = 1 << 1 = 2
SLLI x19 x2 002     ; x19 = 2 << 2 = 8

; --- SRLI Test ---
; Logical shift right: 2047 (0x07FF) >> 3 = 2047/8 = 255 (0x00FF)
SRLI x20 x5 003     ; x20 = 0x07FF >> 3 = 0x00FF

; --- SRAI Test ---
; Arithmetic shift right: x4 = -2048 (0xF800) >> 2 = -512
; In 16-bit two's complement, -512 = 0xFE00
SRAI x21 x4 002     ; x21 = -2048 >> 2 = 0xFE00

; End of Test
ADDI x0 x0 000